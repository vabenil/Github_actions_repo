name: CI/CD pipeline for AWS elastic beans talk
env:
  EB_PACKAGE_S3_BUCKET_NAME: victor-abenil-actions-bk
  EB_APPLICATION_NAME: "Victor Abenil Git Actions"
  EB_ENVIRONMENT: "VictorAbenilGitActions-env"
  DEPLOY_PACKAGE_NAME: "php-Victor-Abenil-${{ github.sha }}.zip"
  AWS_REGION_NAME: eu-central-1
on:
  push:
    branches:
      - main

jobs:
  ci-part:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        
      - name: Create ZIP package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
          
      - name: Copy to S3
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
      - name: Print MSG
        run: echo "CI Part is done successfuly"
        
  cd-part:
    runs-on: ubuntu-latest
    needs: ci-part
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
          
      - name: Create new App
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}", S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Version-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"

      - name: Deploy new App
        run: |
          aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
          --version-label "Version-${{ github.sha }}"

      - name: Print MSG
        run: echo "Great job! Workflow done"
